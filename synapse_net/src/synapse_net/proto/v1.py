# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: proto/v1/camera.proto, proto/v1/device.proto, proto/v1/pipeline.proto, proto/v1/message.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class MessageTypeProto(betterproto.Enum):
    MESSAGE_TYPE_PROTO_UNSPECIFIED = 0
    MESSAGE_TYPE_PROTO_SEND_DEVICE_INFO = 1
    MESSAGE_TYPE_PROTO_SEND_METRICS = 2


@dataclass
class CameraProto(betterproto.Message):
    name: str = betterproto.string_field(1)
    stream_path: str = betterproto.string_field(2)
    physical_connection: str = betterproto.string_field(3)
    index: int = betterproto.int32_field(4)


@dataclass
class DeviceInfoProto(betterproto.Message):
    hostname: str = betterproto.string_field(1)
    ip: str = betterproto.string_field(2)
    platform: str = betterproto.string_field(3)
    network_interfaces: List[str] = betterproto.string_field(4)


@dataclass
class HardwareMetricsProto(betterproto.Message):
    cpu_temp: float = betterproto.float_field(1)
    cpu_usage: float = betterproto.float_field(2)
    disk_usage: float = betterproto.float_field(3)
    ram_usage: float = betterproto.float_field(4)
    uptime: float = betterproto.float_field(5)
    last_fetched: str = betterproto.string_field(6)


@dataclass
class PipelineProto(betterproto.Message):
    name: str = betterproto.string_field(1)
    type: str = betterproto.string_field(2)
    index: int = betterproto.uint32_field(3)


@dataclass
class MessageProto(betterproto.Message):
    type: "MessageTypeProto" = betterproto.enum_field(1)
    device_info: "DeviceInfoProto" = betterproto.message_field(2, group="payload")
    hardware_metrics: "HardwareMetricsProto" = betterproto.message_field(
        3, group="payload"
    )
    camera_info: "CameraProto" = betterproto.message_field(4, group="payload")
    pipeline_info: "PipelineProto" = betterproto.message_field(5, group="payload")
