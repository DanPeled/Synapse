name: Py SynapseLib CI

on:
  push:
    branches:
      - main
    paths:
      - "synapse_lib/py/**"
  pull_request:
    paths:
      - "synapse_lib/py/**"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: synapse_lib/py

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.7"

      - name: Install Python dependencies
        run: pip install .

      - name: Run build check
        run: python3 -m compileall .

      - name: Check wheel contents
        run: |
          pip install wheel
          python -c "
          import sys, glob, zipfile, re
          wheel_files = glob.glob('dist/*.whl')
          if not wheel_files:
              print('No wheel file found', file=sys.stderr)
              sys.exit(1)
          wheel_file = wheel_files[0]
          print(f'Wheel file: {wheel_file}')
          pattern = re.compile(r'synapselib/')
          with zipfile.ZipFile(wheel_file) as zf:
              for info in zf.infolist():
                  if pattern.search(info.filename):
                      print(info.filename)
          "

  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: synapse_lib/py

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.7"

      - name: Install Ruff and isort
        run: pip install ruff isort

      - name: Run Ruff linting
        run: ruff check .

      - name: Run isort check
        run: isort --check-only --diff .

  type-check:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: synapse_lib/py

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.7"

      - name: Install Python dependencies
        run: pip install .

      - name: Install Pyright
        run: pip install pyright

      - name: Run Pyright type checks
        run: pyright

  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: synapse_lib/py

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.7"

      - name: Install Python dependencies
        run: pip install .

      - name: Install PyTest
        run: pip install pytest

      - name: Run Tests
        run: python3 -m pytest .
