import edu.wpi.first.toolchain.*

plugins {
    id 'cpp'
    id 'java'
    id 'google-test'
    id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin' version '2025.0'
    id 'edu.wpi.first.NativeUtils' version '2025.9.0'
    id 'edu.wpi.first.GradleJni' version '1.1.0'
    id 'edu.wpi.first.GradleVsCode' version '2.1.0'
    id 'com.diffplug.spotless' version '6.20.0'
}

// WPILib Version
ext.wpilibVersion = "2025.3.1"

repositories {
    mavenCentral()
}
if (project.hasProperty('releaseMode')) {
    wpilibRepositories.addAllReleaseRepositories(project)
} else {
    wpilibRepositories.addAllDevelopmentRepositories(project)
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
var javaVersion = "17"

apply from: 'config.gradle'

// Apply Java configuration
dependencies {
    implementation "edu.wpi.first.cscore:cscore-java:$wpilibVersion"
    implementation "edu.wpi.first.cameraserver:cameraserver-java:$wpilibVersion"
    implementation "edu.wpi.first.ntcore:ntcore-java:$wpilibVersion"
    implementation "edu.wpi.first.wpilibj:wpilibj-java:$wpilibVersion"
    implementation "edu.wpi.first.wpiutil:wpiutil-java:$wpilibVersion"
    implementation "edu.wpi.first.wpimath:wpimath-java:$wpilibVersion"
    implementation "edu.wpi.first.wpiunits:wpiunits-java:$wpilibVersion"
    implementation "edu.wpi.first.hal:hal-java:$wpilibVersion"
    implementation "org.ejml:ejml-simple:0.43.1"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.15.2"
    implementation "com.fasterxml.jackson.core:jackson-core:2.15.2"
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.15.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.15.2'
    implementation "com.fasterxml.jackson.core:jackson-databind:2.15.2"
    implementation 'edu.wpi.first.thirdparty.frc2025.opencv:opencv-java:4.10.0-2'

    implementation "org.msgpack:jackson-dataformat-msgpack:0.9.10"
    implementation "org.msgpack:msgpack-core:0.9.10"
    annotationProcessor "org.msgpack:jackson-dataformat-msgpack:0.9.10"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
}

// Set up Java tests
test {
    useJUnitPlatform()
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add '-XDstringConcat=inline'
    options.encoding = 'UTF-8'
}

// Setup Javadocs to link back to WPILib docs
javadoc {
    destinationDir = file("vendordep/docs")
    title = "Synapse"
    options {
        links "https://docs.oracle.com/en/java/javase/$javaVersion/docs/api/", 'https://github.wpilib.org/allwpilib/docs/release/java/'
    }
}

ext.getCurrentArch = {
    return NativePlatforms.desktop
}

spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**', '**/bin/**'
        }
        toggleOffOn()
        googleJavaFormat()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target fileTree('.') {
            include '**/*.gradle'
            exclude '**/build/**', '**/build-*/**'
        }
        greclipse()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'xml', {
        target fileTree('.') {
            include '**/*.xml'
            exclude '**/build/**', '**/build-*/**'
        }
        eclipseWtp('xml')
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
    format 'misc', {
        target fileTree('.') {
            include '**/*.md', '**/.gitignore'
            exclude '**/build/**', '**/build-*/**'
        }
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }
}

apply from: 'publish.gradle'

wrapper {
    gradleVersion '8.11'
}

tasks.named('spotlessGroovyGradle') {
    dependsOn tasks.named('javadoc')
}

tasks.named('spotlessJava') {
    dependsOn tasks.named('javadoc')
}

tasks.named('spotlessMisc') {
    dependsOn tasks.named('javadoc')
}

tasks.named('spotlessXml') {
    dependsOn tasks.named('javadoc')
}
